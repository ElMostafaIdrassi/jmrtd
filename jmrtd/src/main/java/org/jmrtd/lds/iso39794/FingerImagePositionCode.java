/*
 * JMRTD - A Java API for accessing machine readable travel documents.
 *
 * Copyright (C) 2006 - 2025  The JMRTD team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 * $Id$
 *
 * Based on ISO-IEC-39794-4-ed-1-v2. Disclaimer:
 * THE SCHEMA ON WHICH THIS SOFTWARE IS BASED IS PROVIDED BY THE COPYRIGHT
 * HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THE CODE COMPONENTS, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package org.jmrtd.lds.iso39794;

public enum FingerImagePositionCode {
  UNKNOWN_POSITION(0),
  RIGHT_THUMB_FINGER(1),
  RIGHT_INDEX_FINGER(2),
  RIGHT_MIDDLE_FINGER(3),
  RIGHT_RING_FINGER(4),
  RIGHT_LITTLE_FINGER(5),
  LEFT_THUMB_FINGER(6),
  LEFT_INDEX_FINGER(7),
  LEFT_MIDDLE_FINGER(8),
  LEFT_RING_FINGER(9),
  LEFT_LITTLE_FINGER(10),
  RIGHT_FOUR_FINGERS(13),
  LEFT_FOUR_FINGERS(14),
  BOTH_THUMB_FINGERS(15),
  RIGHT_EXTRA_DIGIT_FINGER(16),
  LEFT_EXTRA_DIGIT_FINGER(17),
  UNKNOWN_FRICTION_RIDGE(18),
  ENTIRE_JOINT_IMAGE(19),
  UNKNOWN_PALM(20),
  RIGHT_FULL_PALM(21),
  RIGHT_WRITERS_PALM(22),
  RIGHT_LOWER_PALM(23),
  RIGHT_UPPER_PALM(24),
  RIGHT_OTHER_PALM(25),
  RIGHT_INTERDIGITAL(26),
  RIGHT_THENAR(27),
  RIGHT_HYPOTHENAR(28),
  LEFT_FULL_PALM(29),
  LEFT_WRITERS_PALM(30),
  LEFT_LOWER_PALM(31),
  LEFT_UPPER_PALM(32),
  LEFT_OTHER_PALM(33),
  LEFT_INTERDIGITAL(34),
  LEFT_THENAR(35),
  LEFT_HYPOTHENAR(36),
  RIGHT_GRASP(37),
  LEFT_GRASP(38),
  RIGHT_INDEX_MIDDLE_FINGERS(40),
  RIGHT_MIDDLE_RING_FINGERS(41),
  RIGHT_RING_LITTLE_FINGERS(42),
  LEFT_INDEX_MIDDLE_FINGERS(43),
  LEFT_MIDDLE_RING_FINGERS(44),
  LEFT_RING_LITTLE_FINGERS(45),
  RIGHT_INDEX_LEFT_INDEX_FINGERS(46),
  RIGHT_INDEX_MIDDLE_RING_FINGERS(47),
  RIGHT_MIDDLE_RING_LITTLE_FINGERS(48),
  LEFT_INDEX_MIDDLE_RING_FINGERS(49),
  LEFT_MIDDLE_RING_LITTLE_FINGERS(50),
  RIGHT_FOUR_FINGERTIPS(51),
  LEFT_FOUR_FINGERTIPS(52),
  RIGHT_FINGERTIPS(53),
  LEFT_FINGERTIPS(54),
  LEFT_MIDDLE_INDEX_RIGHT_INDEX_MIDDLE_FINGERS(55),
  UNKNOWN_SOLE(60),
  RIGHT_SOLE(61),
  LEFT_SOLE(62),
  UNKNOWN_TOE(63),
  RIGHT_BIG_TOE(64),
  RIGHT_SECOND_TOE(65),
  RIGHT_MIDDLE_TOE(66),
  RIGHT_FOURTH_TOE(67),
  RIGHT_LITTLE_TOE(68),
  LEFT_BIG_TOE(69),
  LEFT_SECOND_TOE(70),
  LEFT_MIDDLE_TOE(71),
  LEFT_FOURTH_TOE(72),
  LEFT_LITTLE_TOE(73),
  RIGHT_FRONT_BALL_FOOT(74),
  RIGHT_BACK_HEEL_FOOT(75),
  LEFT_FRONT_BALL_FOOT(76),
  LEFT_BACK_HEEL_FOOT(77),
  RIGHT_MIDDLE_FOOT(78),
  LEFT_MIDDLE_FOOT(79),
  RIGHT_CARPAL_DELTA(81),
  LEFT_CARPAL_DELTA(82),
  RIGHT_FULL_WITH_WRITER_PALM(83),
  LEFT_FULL_WITH_WRITER_PALM(84),
  RIGHT_BRACELET(85),
  LEFT_BRACELET(86),
  OTHER_POSITION(999);

  private int code;

  private FingerImagePositionCode(int code) {
    this.code = code;
  }

  public int getCode() {
    return code;
  }

  public static FingerImagePositionCode fromCode(int code) {
    if (code < 0) {
      return null;
    }
    for (FingerImagePositionCode value: values()) {
      if (code == value.code) {
        return value;
      }
    }

    return null;
  }
}

